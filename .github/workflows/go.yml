name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -v -o lmcmd-linux lmcmd.go

      - name: Upload Linux binary
        uses: actions/upload-artifact@v3
        with:
          name: lmcmd-linux-binary
          path: lmcmd-linux

  build-macos-x86:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build for macOS x86
        run: |
          GOOS=darwin GOARCH=amd64 go build -v -o lmcmd-macos-x86 lmcmd.go

      - name: Upload macOS x86 binary
        uses: actions/upload-artifact@v3
        with:
          name: lmcmd-macos-x86-binary
          path: lmcmd-macos-x86

  build-macos-m1:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build for macOS M1
        run: |
          GOOS=darwin GOARCH=arm64 go build -v -o lmcmd-macos-m1 lmcmd.go

      - name: Upload macOS M1 binary
        uses: actions/upload-artifact@v3
        with:
          name: lmcmd-macos-m1-binary
          path: lmcmd-macos-m1

  release:
    needs: [build-linux, build-macos-x86, build-macos-m1]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Read version
        id: get_version
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Tag version
        run: |
          git tag v${{ steps.get_version.outputs.version }}
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/andykcheng/lmcmd.git v${{ steps.get_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Download Linux binary
        uses: actions/download-artifact@v3
        with:
          name: lmcmd-linux-binary
          path: .

      - name: Download macOS x86 binary
        uses: actions/download-artifact@v3
        with:
          name: lmcmd-macos-x86-binary
          path: .

      - name: Download macOS M1 binary
        uses: actions/download-artifact@v3
        with:
          name: lmcmd-macos-m1-binary
          path: .

      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lmcmd-linux
          asset_name: lmcmd-linux
          asset_content_type: application/octet-stream

      - name: Upload macOS x86 binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lmcmd-macos-x86
          asset_name: lmcmd-macos-x86
          asset_content_type: application/octet-stream

      - name: Upload macOS M1 binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lmcmd-macos-m1
          asset_name: lmcmd-macos-m1
          asset_content_type: application/octet-stream
